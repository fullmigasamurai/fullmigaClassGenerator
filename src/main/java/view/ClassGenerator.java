/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package view;

import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;

import javax.swing.JOptionPane;

import classGenerator.ArqSelector;

/**
 *
 * @author Toph
 */
public class ClassGenerator extends javax.swing.JFrame {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * Creates new form ClassGenerator
	 */
	public ClassGenerator() {
		initComponents();
	}
	public boolean loadArq(String name) {
		java.io.BufferedReader reader = null;
		try {
			if (!name.contains(".csv"))
				name+=".csv";
			reader = new java.io.BufferedReader(new java.io.FileReader(name));

		} catch (FileNotFoundException ex) {

			return false;
		}

		try {

			String nextLine;
			for (int i = 0; i < 8 && (nextLine = reader.readLine()) != null; i++) {
				String split[] = nextLine.split(";");
				table.setValueAt(split[0], i, 0);
				table.setValueAt(split[1], i, 1);

			}
			reader.close();
			System.out.println("Arq Ready");
			arqNameLabel.setText(new java.io.File(name).getName().replace(".csv", ""));

		} catch (IOException ex) {
			JOptionPane.showMessageDialog(this, "Erro ao ler o arquivo");
			return false;

		}

		return true;
	}
	
	public void loadCSV() {

		javax.swing.JFileChooser arq;
		arq = new javax.swing.JFileChooser();

		arq.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
		javax.swing.filechooser.FileNameExtensionFilter filter = new javax.swing.filechooser.FileNameExtensionFilter(
				"Arquivos csv", "csv");
		arq.setFileFilter(filter);

		int retorno = arq.showOpenDialog(null);

		if (retorno == javax.swing.JFileChooser.APPROVE_OPTION) {
			pathText.setText(arq.getSelectedFile().getAbsolutePath());
		} else if (retorno != javax.swing.JFileChooser.CANCEL_OPTION) {
			JOptionPane.showMessageDialog(rootPane, "Não foi Possivel Abrir o Arquivo");
		}
	}

	public String getFolderPath() {

		javax.swing.JFileChooser arq;
		arq = new javax.swing.JFileChooser();
		arq.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
		arq.setDialogTitle("Select The Source Folder");
		arq.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
		arq.setAcceptAllFileFilterUsed(false);
  
		// if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
		//   System.out.println("getCurrentDirectory(): " 
		// 	 +  chooser.getCurrentDirectory());
		//   System.out.println("getSelectedFile() : " 
		// 	 +  chooser.getSelectedFile());
		//   }
		// else {
		//   System.out.println("No Selection ");
		//   }
		//  }

		int retorno = arq.showOpenDialog(this);

		if (retorno == javax.swing.JFileChooser.APPROVE_OPTION) {
			return arq.getSelectedFile().getAbsolutePath();
		} else if (retorno != javax.swing.JFileChooser.CANCEL_OPTION) {
			JOptionPane.showMessageDialog(rootPane, "Não foi Possivel Selecionar o diretorio");
			return null;
		}
		
		return null;
		
	}
	
	public HashMap<String, String> readTable(javax.swing.JTable tab) {

		HashMap<String, String> table = new HashMap<String, String>();

		int rows = tab.getRowCount();
		for (int i = 0; i < rows; i++) {
			if (tab.getValueAt(i, 0) != null 
				&& tab.getValueAt(i, 0) !="" 
				&& tab.getValueAt(i, 1) != null 
				&& tab.getValueAt(i, 1) != "") {

				System.out.println("data: " + tab.getValueAt(i, 1) + "\n____");
				table.put((String) tab.getValueAt(i, 0), (String) tab.getValueAt(i, 1));
			}

		}
		return table.isEmpty() ? null : table;


	}
		
	public void cleanTable() {

		int row = table.getRowCount(), col = table.getColumnCount();

		System.out.println("in clean");
		
		for (int i = 0; i < row; i++) {
			// System.out.println("data: " + table.isRowSelected(i) + "\n____");
			// System.out.println("tab.getValueAt(i, 0): " + table.getValueAt(i, 0) + "\n____");
			if (table.isRowSelected(i)){
				// System.out.println("Selected Row: " + i + "\n____");
				for (int j = 0; j < col; j++) {
					table.setValueAt(null, i, j);
				}
			}
		}
		
		pathText.setText("");
		arqNameLabel.setText("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGroundPanel = new javax.swing.JPanel();
        TittleLabe = new javax.swing.JLabel();
        TablePanel = new javax.swing.JPanel();
        ScrollForJTable = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        FooterLabel = new javax.swing.JLabel();
        RightPanel = new javax.swing.JPanel();
        readArq = new javax.swing.JButton();
        generateArq = new javax.swing.JButton();
        pathText = new javax.swing.JTextField();
        rename = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sourcePath = new javax.swing.JTextField();
        usingArqLabel = new javax.swing.JLabel();
        arqNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 0, 51));
        setMinimumSize(new java.awt.Dimension(750, 256));

        BackGroundPanel.setBackground(new java.awt.Color(0, 51, 51));

        TittleLabe.setForeground(new java.awt.Color(204, 255, 255));
        TittleLabe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TittleLabe.setText("ClassGenerator");

        TablePanel.setBackground(new java.awt.Color(51, 0, 51));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        table.setGridColor(new java.awt.Color(0, 0, 0));
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableKeyPressed(evt);
            }
        });
        ScrollForJTable.setViewportView(table);
        table.setRowHeight(18);

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollForJTable)
                .addContainerGap())
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollForJTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        FooterLabel.setForeground(new java.awt.Color(153, 255, 153));
        FooterLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        FooterLabel.setText("Iel Rebeque @fullmigasamurai");

        RightPanel.setBackground(new java.awt.Color(51, 51, 51));
        RightPanel.setMaximumSize(new java.awt.Dimension(180, 178));
        RightPanel.setMinimumSize(new java.awt.Dimension(100, 100));

        readArq.setText("ReadArq");
        readArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readArqActionPerformed(evt);
            }
        });

        generateArq.setText("Generate Arq");
        generateArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateArqActionPerformed(evt);
            }
        });

        pathText.setMaximumSize(new java.awt.Dimension(180, 25));
        pathText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTextActionPerformed(evt);
            }
        });
        pathText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pathTextKeyPressed(evt);
            }
        });

        rename.setText("Rename");
        rename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameActionPerformed(evt);
            }
        });

        jLabel1.setText("Path:");

        sourcePath.setMaximumSize(new java.awt.Dimension(180, 25));
        sourcePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourcePathActionPerformed(evt);
            }
        });
        sourcePath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sourcePathKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout RightPanelLayout = new javax.swing.GroupLayout(RightPanel);
        RightPanel.setLayout(RightPanelLayout);
        RightPanelLayout.setHorizontalGroup(
            RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(readArq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(generateArq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rename, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(RightPanelLayout.createSequentialGroup()
                        .addGroup(RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pathText, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(RightPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sourcePath, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        RightPanelLayout.setVerticalGroup(
            RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(readArq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateArq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sourcePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rename)
                .addContainerGap())
        );

        usingArqLabel.setForeground(new java.awt.Color(255, 255, 255));
        usingArqLabel.setText("Utilizando Arquivo:");

        arqNameLabel.setForeground(new java.awt.Color(153, 255, 255));
        arqNameLabel.setText(" ");

        javax.swing.GroupLayout BackGroundPanelLayout = new javax.swing.GroupLayout(BackGroundPanel);
        BackGroundPanel.setLayout(BackGroundPanelLayout);
        BackGroundPanelLayout.setHorizontalGroup(
            BackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackGroundPanelLayout.createSequentialGroup()
                .addGroup(BackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackGroundPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TittleLabe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(BackGroundPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(BackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackGroundPanelLayout.createSequentialGroup()
                                .addComponent(usingArqLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arqNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FooterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
                            .addGroup(BackGroundPanelLayout.createSequentialGroup()
                                .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        BackGroundPanelLayout.setVerticalGroup(
            BackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackGroundPanelLayout.createSequentialGroup()
                .addComponent(TittleLabe, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FooterLabel)
                    .addComponent(usingArqLabel)
                    .addComponent(arqNameLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void generateArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateArqActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_generateArqActionPerformed

	private void pathTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTextActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_pathTextActionPerformed

	private void renameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameActionPerformed
		HashMap<String, String> tableMap = readTable(table);
		if (tableMap != null) {
			// ArqSelector arqManipulator = new ArqSelector(tableMap);
			ArqSelector arqManipulator = new ArqSelector();
			// if (sourcePath.getText() == "" || sourcePath.getText() == null)
			// 	arqManipulator.listFolder(new java.io.File(System.getProperty("user.dir")));
			// else
			// 	arqManipulator.listFolder(new java.io.File(sourcePath.getText()));
			arqManipulator.listFolder(new java.io.File("./tmp/NovaPasta"));
		}


	}//GEN-LAST:event_renameActionPerformed

	private void readArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readArqActionPerformed
		if (loadArq(pathText.getText()) == false) {
			if (JOptionPane.showConfirmDialog(this, "Impossivel abrir arquivo para leitura\nDeseja escolher outro arquivo?",
					"Erro ao abrir arquivo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
				loadCSV();
				loadArq(pathText.getText());
			}
		}
	}//GEN-LAST:event_readArqActionPerformed

	private void pathTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pathTextKeyPressed
		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
			
			if (loadArq(pathText.getText()) == false) {
				if (JOptionPane.showConfirmDialog(this, "Impossivel abrir arquivo para leitura\nDeseja escolher outro arquivo?",
						"Erro ao abrir arquivo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
					loadCSV();
					loadArq(pathText.getText());
				}
			}
		}
	}//GEN-LAST:event_pathTextKeyPressed

	private void tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyPressed
		if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
			cleanTable();
			System.out.println("del");
		}
	}//GEN-LAST:event_tableKeyPressed

    private void sourcePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourcePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourcePathActionPerformed

    private void sourcePathKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sourcePathKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sourcePath.setText(getFolderPath());
        }
    }//GEN-LAST:event_sourcePathKeyPressed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		*/
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					javax.swing.UIDefaults defaults = javax.swing.UIManager.getLookAndFeelDefaults();
					defaults.put("Table.gridColor", new java.awt.Color (214,217,223));
					defaults.put("Table.disabled", false);
					defaults.put("Table.showGrid", true);
					defaults.put("Table.intercellSpacing", new java.awt.Dimension(1, 1));
					break;
				}
				
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClassGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClassGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClassGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClassGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		};
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
			
				new ClassGenerator().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackGroundPanel;
    private javax.swing.JLabel FooterLabel;
    private javax.swing.JPanel RightPanel;
    private javax.swing.JScrollPane ScrollForJTable;
    private javax.swing.JPanel TablePanel;
    private javax.swing.JLabel TittleLabe;
    private javax.swing.JLabel arqNameLabel;
    private javax.swing.JButton generateArq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField pathText;
    private javax.swing.JButton readArq;
    private javax.swing.JButton rename;
    private javax.swing.JTextField sourcePath;
    private javax.swing.JTable table;
    private javax.swing.JLabel usingArqLabel;
    // End of variables declaration//GEN-END:variables
}
